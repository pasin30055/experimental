// Copyright 2020 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.api.v1alpha;

import "wfa/measurement/api/v1alpha/data_provider.proto";

option java_package = "org.wfanet.measurement.api.v1alpha";
option java_multiple_files = true;
option java_outer_classname = "DataProviderRegistrationServiceProto";

// Kingdom service for registration of data providers.
service DataProviderRegistration {
  // Creates (registers) a DataProvider.
  rpc CreateDataProvider(CreateDataProviderRequest) returns (DataProvider) {}

  // Creates (registers) a Campaign in the specified DataProvider's system.
  rpc CreateCampaign(CreateCampaignRequest) returns (Campaign) {}
}

// Request message for CreateDataProvider method.
message CreateDataProviderRequest {
  // The DataProvider to create. Required. The `key` field will be ignored, and
  // the system will assign an ID.
  DataProvider data_provider = 1;
}

// Request message for CreateCampaign method.
message CreateCampaignRequest {
  // Resource key of the parent DataProvider. Required.
  DataProvider.Key parent = 1;

  // The Campaign to create. Required.
  //
  // The `key` field will be ignored, and the system will assign an ID. Results
  // in an ALREADY_EXISTS error if there is already a child Campaign with the
  // same `campaign_reference_id`.
  Campaign campaign = 2;
}