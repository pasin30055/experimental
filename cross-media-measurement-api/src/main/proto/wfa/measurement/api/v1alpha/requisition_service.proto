// Copyright 2020 The Measurement Proto Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.api.v1alpha;

import "wfa/measurement/api/v1alpha/data_provider.proto";
import "wfa/measurement/api/v1alpha/requisition.proto";

option java_package = "org.wfanet.measurement.api.v1alpha";
option java_multiple_files = true;
option java_outer_classname = "RequisitionServiceProto";

// Service for interacting with metric requisitions.
//
// Requisitions are created on behalf of advertisers to instruct data providers
// to collect and upload the metric values necessary to generate a report.
service Requisition {
  // Returns the metric requisitions for the specified Campaign.
  rpc ListMetricRequisitions(ListMetricRequisitionsRequest)
      returns (ListMetricRequisitionsResponse);

  // Transitions the MetricRequisition to the PERMANENTLY_UNFILLABLE state. This
  // is a terminal state for the MetricRequisition and all computations that
  // rely on the MetricRequisition will fail. Consequently, this should only be
  // used for permanent failures, not transient errors.
  //
  // This is a state transition method (see https://aip.dev/216).
  rpc RefuseMetricRequisition(RefuseMetricRequisitionRequest)
      returns (MetricRequisition);
}

// Request message for ListMetricRequisitions method.
message ListMetricRequisitionsRequest {
  // Resource key of the parent Campaign. Required. The campaign ID may be
  // omitted to list across all campaigns for the specified data provider.
  //
  // Results in a PERMISSION_DENIED error if any key segment does not match for
  // the authenticated user. For example, attempting to list requisitions for
  // other data providers or for campaigns belonging to other advertisers.
  Campaign.Key parent = 1;

  // The maximum number of resources to return. See https://aip.dev/158.
  int32 page_size = 2;
  // A token from a previous call, specified to retrieve the next page. See
  // https://aip.dev/158.
  string page_token = 3;

  // Filter criteria. Repeated fields are treated as logical ORs, and multiple
  // fields specified as logical ANDs.
  message Filter {
    repeated MetricRequisition.State states = 1;
  }
  // Result filter. If a page token is specified, then this will be ignored and
  // the filter for the first page will be applied.
  Filter filter = 4;
}

// Response message for ListMetricRequisitions method.
message ListMetricRequisitionsResponse {
  // The MetricRequisition resources.
  repeated MetricRequisition metric_requisitions = 1;

  // A token that can be specified in a subsequent call to retrieve the next
  // page. See https://aip.dev/158.
  string next_page_token = 2;
}

// Request message for RefuseMetricRequisition method.
message RefuseMetricRequisitionRequest {
  // Resource key of the MetricRequisition to mark as permanently unfulfillable.
  // Required.
  MetricRequisition.Key key = 1;

  // Details about the refusal.
  MetricRequisition.Refusal refusal = 2;
}
