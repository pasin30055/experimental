#!/bin/bash

set -eEu -o pipefail

readonly IMAGE='gcr.io/ads-open-measurement/bazel:latest'
#readonly IMAGE='bazel/src/main/docker/bazel:bazel_clean_image'
readonly OUTPUT_USER_ROOT="/tmp/bazel-docker-${USER}"
readonly REPO_CACHE='/bazel-repo-cache'
readonly DOCKER="${DOCKER:-docker}"

is_podman() {
  $DOCKER -v | grep --quiet podman
}

is_rootless() {
  if is_podman; then
    [[ "$($DOCKER info --format '{{.Host.Rootless}}')" == 'true' ]]
  else
    $DOCKER info --format '{{.SecurityOptions}}' | grep --quiet rootless
  fi
}

main() {
  mkdir -p "${OUTPUT_USER_ROOT}"

  local -a docker_options=(
    --entrypoint /usr/bin/bazel
    -v "${PWD}:${PWD}"
    -v "${OUTPUT_USER_ROOT}:${OUTPUT_USER_ROOT}"
    -v "${HOME}/.cache/bazel/_bazel_${USER}/cache/repos/v1:${REPO_CACHE}"
    -w "${PWD}"
    --network host
  )

  if ! is_rootless; then
    docker_options+=(
      --user "$EUID"
      --env "USER=$USER"
    )
  fi

  local -a startup_options=(
    --output_user_root "${OUTPUT_USER_ROOT}"
  )
  while [[ "$1" =~ [[:space:]]*-.* ]]; do
    startup_options+=("$1")
    shift 1
  done

  local command="$1"
  shift 1

  exec "${DOCKER}" run "${docker_options[@]}" \
    "${IMAGE}" \
    "${startup_options[@]}" \
    "${command}" \
    --repository_cache "${REPO_CACHE}" \
    "$@"
}

main "$@"
