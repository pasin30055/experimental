load(
    "//src/main/docker:defs.bzl",
    "container_commit_add_apt_key",
    "container_commit_install_apt_packages",
)
load(
    "@io_bazel_rules_docker//container:container.bzl",
    "container_image",
    "container_layer",
    "container_push",
)

BASE_IMAGE = "@bazel_image//image"

# APT packages necessary for adding an APT key.
container_commit_install_apt_packages(
    name = "apt_key_packages",
    image = BASE_IMAGE,
    packages = [
        "apt-transport-https",
        "ca-certificates",
        "gnupg",
    ],
    tags = ["manual"],
)

container_layer(
    name = "gcloud_key_file",
    directory = "/root",
    files = ["@gcloud_apt_key//file"],
    mode = "0o644",
    tags = ["manual"],
)

container_image(
    name = "apt_key_install_image",
    base = BASE_IMAGE,
    layers = [
        ":apt_key_packages",
        ":gcloud_key_file",
    ],
    tags = ["manual"],
)

container_commit_add_apt_key(
    name = "apt_keyring",
    image = ":apt_key_install_image.tar",
    key_path = "/root/cloud.google.gpg",
    keyring_path = "/usr/share/keyrings/cloud.google.gpg",
    tags = ["manual"],
)

container_layer(
    name = "gcloud_sdk_apt_list",
    directory = "/etc/apt/sources.list.d",
    files = ["google-cloud-sdk.list"],
    tags = ["manual"],
)

container_image(
    name = "package_install_image",
    base = BASE_IMAGE,
    layers = [
        ":apt_keyring",
        ":gcloud_sdk_apt_list",
    ],
    tags = ["manual"],
)

container_commit_install_apt_packages(
    name = "apt_packages",
    image = ":package_install_image.tar",
    packages = [
        "clang-format-10",
        "docker.io",
        "google-cloud-sdk",
        "google-cloud-sdk-kind",
    ],
    tags = ["manual"],
)

container_layer(
    name = "binaries",
    directory = "/usr/bin",
    files = [
        "@buildifier//file",
        "@ktlint//file",
    ],
    mode = "0o755",
    tags = ["manual"],
)

container_image(
    name = "prow_job_image",
    base = ":package_install_image",
    layers = [
        ":apt_packages",
        ":binaries",
    ],
    stamp = True,
    symlinks = {
        "/usr/bin/clang-format": "/usr/bin/clang-format-10",
    },
    tags = ["manual"],
)

container_push(
    name = "push_prow_job_image",
    format = "Docker",
    image = ":prow_job_image",
    registry = "gcr.io",
    repository = "ads-open-measurement/prowjob_cluster",
    tags = [
        "manual",
        "requires-network",
    ],
)
